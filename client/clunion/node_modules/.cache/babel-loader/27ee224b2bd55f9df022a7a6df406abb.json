{"ast":null,"code":"var _jsxFileName = \"/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, useParams, Link } from 'react-router-dom';\nimport PostMessage from '../components/PostMessage';\nimport GuestMessage from '../components/GuestMessage';\nimport '../style/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s();\n\n  const location = useLocation();\n  let navigate = useNavigate();\n  const {\n    msgId\n  } = useParams();\n  const BASE_URL = 'http://localhost:3001/api'; //display all messages ==> getMessage()\n\n  let [allMessage, setAllMessage] = useState([]); // let [postMessage, setPostMessage] = useState([])\n  //create new message ==> createMessage()\n\n  let [message, setMessage] = useState(''); //get message by Id ==> getMessageById\n\n  let [specificMessage, setSpecificMessage] = useState(''); //update message ==> updateMessage()\n\n  const [messageUpdate, setMessageUpdate] = useState(''); //delete message ==> deletemessage\n\n  let [messageDelete, setMessageDelete] = useState({});\n  let [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if (!selected) {\n      let getMessage = async () => {\n        let response = await axios.get(`${BASE_URL}/message`);\n        console.log(response, 'GET ALL MESSAGES');\n        setAllMessage(response.data);\n      };\n\n      getMessage();\n      return () => {\n        allMessage = [...allMessage];\n      };\n    } else if (selected) {\n      let createMessage = async () => {\n        let response = await axios.post(`${BASE_URL}/message`).then(function (res) {\n          console.log(response, 'POST MESSAGE');\n          setMessage(response.data);\n        });\n      };\n\n      createMessage();\n      return () => {\n        message = [...allMessage, message];\n      };\n    } else if (selected && specificMessage) {\n      let getMessageById = async () => {\n        let response = await axios.get(`${BASE_URL}/message/${msgId}`);\n        console.log(response, 'GET SPECIFIC MESSAGES');\n        setSpecificMessage(response.data);\n      };\n\n      getMessageById();\n      return () => {\n        specificMessage = [specificMessage];\n      };\n    } else if (selected && messageUpdate) {\n      let updateMessage = async () => {\n        let response = await axios.put(`${BASE_URL}/message/${msgId}`).then(function () {\n          console.log(response, 'UPDATE MESSAGE');\n          setMessageUpdate(response.data);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      };\n\n      updateMessage();\n      return () => {\n        updateMessage = [...allMessage, updateMessage];\n      };\n    } else if (selected && messageDelete) {\n      let deleteMessage = async () => {\n        let response = await axios.delete(`${BASE_URL}/message/${msgId}`).then(function (res) {\n          console.log(response, 'DELETE MESSAGE');\n          setMessage(res.data);\n        }).catch(function (error) {\n          console.log(error);\n        });\n        setMessageDelete(response.data);\n      };\n\n      deleteMessage();\n      return () => {\n        deleteMessage = ['Message Deleted'];\n      };\n    } else {\n      return selected = true;\n    }\n  }, [selected]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n\n  const addMessage = () => {\n    let myMessage = [...allMessage, message];\n    setAllMessage(myMessage);\n    setMessage('');\n  };\n\n  const removeMessage = msg => {\n    let addedMessage = [...allMessage];\n    addedMessage.splice(message, 1);\n    setAllMessage(addedMessage);\n  };\n\n  const updateMessage = () => {\n    let newMessage = '';\n    specificMessage.forEach(function (specific, i) {\n      if (specific === specificMessage) specificMessage[i] = newMessage;\n    });\n  };\n\n  const showAllMessages = () => {\n    let allMessages = [...allMessage];\n    return allMessages;\n  };\n\n  const showOneMessage = () => {\n    return specificMessage;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a message for the couple!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgDisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: showAllMessages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GuestMessage, {\n          handleChange: handleChange,\n          addMessage: addMessage,\n          message: message // allMessage={allMessage}\n          // setAllMessage={setAllMessage}\n          // message={message}\n          // setMessage={setMessage}\n          // specificMessage={specificMessage}\n          // setSpecificMessage={setSpecificMessage}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostMessage, {\n          allMessage: allMessage,\n          showAllMessages: showAllMessages,\n          showOneMessage: showOneMessage,\n          removeMessage: removeMessage,\n          updateMessage: updateMessage // allMessage={allMessage}\n          // setAllMessage={setAllMessage}\n          // messageupdate={messageUpdate}\n          // setMessageUpdate={setMessageUpdate}\n          // messageDelete={messageDelete}\n          // setMessageDelete={setMessageDelete}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"2VxKmSMxYUUxZ7VfMRnBQhgQq14=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useParams","Link","PostMessage","GuestMessage","axios","Message","location","navigate","msgId","BASE_URL","allMessage","setAllMessage","message","setMessage","specificMessage","setSpecificMessage","messageUpdate","setMessageUpdate","messageDelete","setMessageDelete","selected","setSelected","getMessage","response","get","console","log","data","createMessage","post","then","res","getMessageById","updateMessage","put","catch","error","deleteMessage","delete","handleChange","e","preventDefault","target","value","addMessage","myMessage","removeMessage","msg","addedMessage","splice","newMessage","forEach","specific","i","showAllMessages","allMessages","showOneMessage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate, useLocation, useParams, Link } from 'react-router-dom'\nimport PostMessage from '../components/PostMessage'\nimport GuestMessage from '../components/GuestMessage'\nimport '../style/App.css'\nimport axios from 'axios'\n\nconst Message = () => {\n  const location = useLocation()\n  let navigate = useNavigate()\n  const { msgId } = useParams()\n\n  const BASE_URL = 'http://localhost:3001/api'\n  //display all messages ==> getMessage()\n  let [allMessage, setAllMessage] = useState([])\n\n  // let [postMessage, setPostMessage] = useState([])\n\n  //create new message ==> createMessage()\n  let [message, setMessage] = useState('')\n  //get message by Id ==> getMessageById\n  let [specificMessage, setSpecificMessage] = useState('')\n  //update message ==> updateMessage()\n  const [messageUpdate, setMessageUpdate] = useState('')\n  //delete message ==> deletemessage\n  let [messageDelete, setMessageDelete] = useState({})\n  let [selected, setSelected] = useState(false)\n\n  useEffect(() => {\n    if (!selected) {\n      let getMessage = async () => {\n        let response = await axios.get(`${BASE_URL}/message`)\n        console.log(response, 'GET ALL MESSAGES')\n        setAllMessage(response.data)\n      }\n      getMessage()\n      return () => {\n        allMessage = [...allMessage]\n      }\n    } else if (selected) {\n      let createMessage = async () => {\n        let response = await axios\n          .post(`${BASE_URL}/message`)\n          .then(function (res) {\n            console.log(response, 'POST MESSAGE')\n            setMessage(response.data)\n          })\n      }\n      createMessage()\n      return () => {\n        message = [...allMessage, message]\n      }\n    } else if (selected && specificMessage) {\n      let getMessageById = async () => {\n        let response = await axios.get(`${BASE_URL}/message/${msgId}`)\n        console.log(response, 'GET SPECIFIC MESSAGES')\n        setSpecificMessage(response.data)\n      }\n      getMessageById()\n      return () => {\n        specificMessage = [specificMessage]\n      }\n    } else if (selected && messageUpdate) {\n      let updateMessage = async () => {\n        let response = await axios\n          .put(`${BASE_URL}/message/${msgId}`)\n          .then(function () {\n            console.log(response, 'UPDATE MESSAGE')\n            setMessageUpdate(response.data)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      }\n      updateMessage()\n      return () => {\n        updateMessage = [...allMessage, updateMessage]\n      }\n    } else if (selected && messageDelete) {\n      let deleteMessage = async () => {\n        let response = await axios\n          .delete(`${BASE_URL}/message/${msgId}`)\n          .then(function (res) {\n            console.log(response, 'DELETE MESSAGE')\n            setMessage(res.data)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n        setMessageDelete(response.data)\n      }\n      deleteMessage()\n      return () => {\n        deleteMessage = ['Message Deleted']\n      }\n    } else {\n      return (selected = true)\n    }\n  }, [selected])\n\n  const handleChange = (e) => {\n    e.preventDefault()\n    setMessage(e.target.value)\n  }\n\n  const addMessage = () => {\n    let myMessage = [...allMessage, message]\n    setAllMessage(myMessage)\n    setMessage('')\n  }\n\n  const removeMessage = (msg) => {\n    let addedMessage = [...allMessage]\n    addedMessage.splice(message, 1)\n    setAllMessage(addedMessage)\n  }\n\n  const updateMessage = () => {\n    let newMessage = ''\n    specificMessage.forEach(function (specific, i) {\n      if (specific === specificMessage) specificMessage[i] = newMessage\n    })\n  }\n\n  const showAllMessages = () => {\n    let allMessages = [...allMessage]\n    return allMessages\n  }\n\n  const showOneMessage = () => {\n    return specificMessage\n  }\n\n  return (\n    <div>\n      <h2>Leave a message for the couple!</h2>\n      <div className=\"msgContainer\">\n        {/* <div>\n          <label>Leave a message</label>\n          <form className=\"msgForm\" onSubmit={setAllMessage}>\n            <textarea\n              className=\"msgText\"\n              type=\"text\"\n              name=\"message\"\n              placeholder=\"Enter your message here...\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            ></textarea>\n            <button className=\"addMsgBtn\" onChange={setMessage}>\n              Send Message\n            </button>\n          </form>\n          <div>{setAllMessage}</div>\n        </div> */}\n        <div className=\"msgDisplay\">\n          <h3>{showAllMessages}</h3>\n          <GuestMessage\n            handleChange={handleChange}\n            addMessage={addMessage}\n            message={message}\n\n            // allMessage={allMessage}\n            // setAllMessage={setAllMessage}\n            // message={message}\n            // setMessage={setMessage}\n            // specificMessage={specificMessage}\n            // setSpecificMessage={setSpecificMessage}\n          />\n          <PostMessage\n            allMessage={allMessage}\n            showAllMessages={showAllMessages}\n            showOneMessage={showOneMessage}\n            removeMessage={removeMessage}\n            updateMessage={updateMessage}\n\n            // allMessage={allMessage}\n            // setAllMessage={setAllMessage}\n            // messageupdate={messageUpdate}\n            // setMessageUpdate={setMessageUpdate}\n            // messageDelete={messageDelete}\n            // setMessageDelete={setMessageDelete}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}