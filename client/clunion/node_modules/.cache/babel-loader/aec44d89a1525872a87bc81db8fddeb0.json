{"ast":null,"code":"var _jsxFileName = \"/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\nimport PostMessage from '../components/PostMessage';\nimport GuestMessage from '../components/GuestMessage';\nimport '../style/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s();\n\n  const location = useLocation();\n  let navigate = useNavigate();\n  const {\n    msgId\n  } = useParams();\n  const BASE_URL = 'http://localhost:3001/api'; //display all messages ==> getMessage()\n\n  let [allMessage, setAllMessage] = useState([]); // let [postMessage, setPostMessage] = useState([])\n  //create new message ==> createMessage()\n\n  let [message, setMessage] = useState(''); //get message by Id ==> getMessageById\n\n  let [specificMessage, setSpecificMessage] = useState({}); //update message ==> updateMessage()\n\n  let [messageUpdate, setMessageUpdate] = useEffect([]); //delete message ==> deletemessage\n\n  let [messageDelete, setMessageDelete] = useState({});\n  let [selected, setSelected] = useState(false);\n  useEffect(() => {\n    if (!selected) {\n      let getMessage = async () => {\n        let response = await axios.get(`${BASE_URL}/message`);\n        console.log(response, 'GET ALL MESSAGES');\n        setAllMessage(response.data);\n      };\n\n      getMessage();\n      return () => {\n        allMessage = [...allMessage];\n      };\n    } else if (selected) {\n      let createMessage = async () => {\n        await axios.post(`${BASE_URL}/message`).then(function (response) {\n          console.log(response, 'POST MESSAGE');\n          setMessage(response.data);\n        });\n      };\n\n      createMessage();\n      return () => {\n        message = [...allMessage, message];\n      };\n    } else if (selected && specificMessage) {\n      let getMessageById = async () => {\n        let response = await axios.get(`${BASE_URL}/message/${msgId}`);\n        console.log(response, 'GET SPECIFIC MESSAGES');\n        setSpecificMessage(response.data);\n        navigate(location.pathname);\n      };\n\n      getMessageById();\n      return () => {\n        getMessageById = [getMessageById];\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a message for the couple!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgContainer\",\n      children: [allMessage.map(msg => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/message/${msg.msg}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guestMsg\",\n          children: /*#__PURE__*/_jsxDEV(GuestMessage, {\n            allMessage: allMessage,\n            setAllMessage: setAllMessage,\n            message: message,\n            setMessage: setMessage,\n            specificMessage: specificMessage,\n            setSpecificMessage: setSpecificMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, msg._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgDisplay\",\n        children: /*#__PURE__*/_jsxDEV(PostMessage, {\n          allMessage: allMessage,\n          setAllMessage: setAllMessage,\n          messageupdate: messageUpdate,\n          setMessageUpdate: setMessageUpdate,\n          messageDelete: messageDelete,\n          setMessageDelete: setMessageDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"d0ZLIGcuenljmY9FO8/RLQa+zdo=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useParams","PostMessage","GuestMessage","axios","Message","location","navigate","msgId","BASE_URL","allMessage","setAllMessage","message","setMessage","specificMessage","setSpecificMessage","messageUpdate","setMessageUpdate","messageDelete","setMessageDelete","selected","setSelected","getMessage","response","get","console","log","data","createMessage","post","then","getMessageById","pathname","map","msg","_id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate, useLocation, useParams } from 'react-router-dom'\nimport PostMessage from '../components/PostMessage'\nimport GuestMessage from '../components/GuestMessage'\nimport '../style/App.css'\nimport axios from 'axios'\n\nconst Message = () => {\n  const location = useLocation()\n  let navigate = useNavigate()\n  const { msgId } = useParams()\n\n  const BASE_URL = 'http://localhost:3001/api'\n  //display all messages ==> getMessage()\n  let [allMessage, setAllMessage] = useState([])\n\n  // let [postMessage, setPostMessage] = useState([])\n\n  //create new message ==> createMessage()\n  let [message, setMessage] = useState('')\n  //get message by Id ==> getMessageById\n  let [specificMessage, setSpecificMessage] = useState({})\n  //update message ==> updateMessage()\n  let [messageUpdate, setMessageUpdate] = useEffect([])\n  //delete message ==> deletemessage\n  let [messageDelete, setMessageDelete] = useState({})\n  let [selected, setSelected] = useState(false)\n\n  useEffect(() => {\n    if (!selected) {\n      let getMessage = async () => {\n        let response = await axios.get(`${BASE_URL}/message`)\n        console.log(response, 'GET ALL MESSAGES')\n        setAllMessage(response.data)\n      }\n      getMessage()\n      return () => {\n        allMessage = [...allMessage]\n      }\n    } else if (selected) {\n      let createMessage = async () => {\n        await axios.post(`${BASE_URL}/message`).then(function (response) {\n          console.log(response, 'POST MESSAGE')\n          setMessage(response.data)\n        })\n      }\n      createMessage()\n      return () => {\n        message = [...allMessage, message]\n      }\n    } else if (selected && specificMessage) {\n      let getMessageById = async () => {\n        let response = await axios.get(`${BASE_URL}/message/${msgId}`)\n        console.log(response, 'GET SPECIFIC MESSAGES')\n        setSpecificMessage(response.data)\n        navigate(location.pathname)\n      }\n      getMessageById()\n      return () => {\n        getMessageById = [getMessageById]\n      }\n    }\n  }, [])\n\n  return (\n    <div>\n      <h2>Leave a message for the couple!</h2>\n      <div className=\"msgContainer\">\n        {allMessage.map((msg) => (\n          <Link to={`/message/${msg.msg}`} key={msg._id}>\n            <div className=\"guestMsg\">\n              <GuestMessage\n                allMessage={allMessage}\n                setAllMessage={setAllMessage}\n                message={message}\n                setMessage={setMessage}\n                specificMessage={specificMessage}\n                setSpecificMessage={setSpecificMessage}\n              />\n            </div>\n          </Link>\n        ))}\n        <div className=\"msgDisplay\">\n          <PostMessage\n            allMessage={allMessage}\n            setAllMessage={setAllMessage}\n            messageupdate={messageUpdate}\n            setMessageUpdate={setMessageUpdate}\n            messageDelete={messageDelete}\n            setMessageDelete={setMessageDelete}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}