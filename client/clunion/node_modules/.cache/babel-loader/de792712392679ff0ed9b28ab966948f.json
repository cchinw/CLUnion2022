{"ast":null,"code":"var _jsxFileName = \"/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\nimport PostMessage from '../components/PostMessage';\nimport GuestMessage from '../components/GuestMessage';\nimport '../style/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const location = useLocation();\n  let navigate = useNavigate();\n  const {\n    msgId\n  } = useParams();\n  const BASE_URL = 'http://localhost:3001/api';\n  let [allMessage, setAllMessage] = useState([]);\n  let [postMessage, setPostMessage] = useState([]);\n  let [message, setMessage] = useState('');\n  let [specificMessage, setSpecificMessage] = useState({});\n  let [messageUpdate, setMessageUpdate] = useEffect('');\n  let [messageDelete, setMessageDelete] = useState({}); // let [selected, setSelected] = useState(false)\n\n  let addNewMessage = () => {\n    _s();\n\n    const data = {\n      msg: ''\n    };\n    useEffect(() => {\n      if (message) {\n        let createMessage = async () => {\n          await axios.post(`${BASE_URL}/message`, data).then(function (response) {\n            console.log(response, 'POST MESSAGE');\n            setMessage(response.data);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        };\n\n        createMessage();\n        navigate(location.pathname);\n        return () => {\n          message = [...allMessage, message];\n        };\n      }\n\n      if (allMessage) {\n        let getMessage = async () => {\n          let response = await axios.get(`${BASE_URL}/message`);\n          console.log(response, 'GET ALL MESSAGES');\n          setAllMessage(response.data);\n          navigate(location.pathname);\n        };\n\n        getMessage();\n        return () => {\n          allMessage = [...allMessage];\n        };\n      }\n\n      if (specificMessage) {\n        let getMessageById = async () => {\n          let response = await axios.get(`${BASE_URL}/message/${msgId}`);\n          console.log(response, 'GET SPECIFIC MESSAGES');\n          setSpecificMessage(response.data);\n          navigate(location.pathname);\n        };\n\n        getMessageById();\n        return () => {\n          getMessageById = [getMessageById];\n        };\n      }\n\n      if (messageUpdate) {\n        let updateMessage = async () => {\n          let response = await axios.put(`${BASE_URL}/message/${msgId}`).then(function (response) {\n            console.log(response, 'UPDATE MESSAGE');\n            setMessage(response.data);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          setMessageUpdate(response.data);\n          navigate(location.pathname);\n        };\n\n        updateMessage();\n        return () => {\n          updateMessage = [...allMessage, updateMessage];\n        };\n      }\n\n      if (messageDelete) {\n        let deleteMessage = async () => {\n          let response = await axios.delete(`${BASE_URL}/message/${msgId}`).then(function (response) {\n            console.log(response, 'DELETE MESSAGE');\n            setMessage(response.data);\n          }).catch(function (error) {\n            console.log(error);\n          });\n          setMessageDelete(response.data);\n          navigate(location.pathname);\n        };\n\n        deleteMessage();\n        return () => {\n          deleteMessage = ['Message Deleted'];\n        };\n      }\n    }, []);\n\n    const handleChange = e => {\n      e.preventDefault();\n      setMessage(e.target.value);\n    }; // const addMessage = () => {\n    //   let myMessage = [...postMessage, message]\n    //   setPostMessage(myMessage)\n    //   setMessage('')\n    // }\n    // const removeMessage = (message) => {\n    //   let addedMessage = [...postMessage]\n    //   addedMessage.splice(message, 1)\n    //   setPostMessage(addedMessage)\n    // }\n    // const displayMessage = () => {\n    //   const data = {\n    //     message: message\n    //   }\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leave a message for the couple!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GuestMessage, {\n          handleChange: handleChange,\n          addNewMessage: addNewMessage,\n          allMessage: allMessage,\n          setAllMessage: setAllMessage,\n          message: message,\n          setMessage: setMessage,\n          specificMessage: specificMessage,\n          setSpecificMessage: setSpecificMessage,\n          messageupdate: messageUpdate,\n          setMessageUpdate: setMessageUpdate,\n          messageDelete: messageDelete,\n          setMessageDelete: setMessageDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostMessage, {\n          postMessage: postMessage,\n          setPostMessage: setPostMessage,\n          messageDelete: messageDelete,\n          setMessageDelete: setMessageDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(addNewMessage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(Message, \"fvkN2dCRqfygLiRkwUB+d/GHyZM=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useParams","PostMessage","GuestMessage","axios","Message","location","navigate","msgId","BASE_URL","allMessage","setAllMessage","postMessage","setPostMessage","message","setMessage","specificMessage","setSpecificMessage","messageUpdate","setMessageUpdate","messageDelete","setMessageDelete","addNewMessage","data","msg","createMessage","post","then","response","console","log","catch","error","pathname","getMessage","get","getMessageById","updateMessage","put","deleteMessage","delete","handleChange","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate, useLocation, useParams } from 'react-router-dom'\nimport PostMessage from '../components/PostMessage'\nimport GuestMessage from '../components/GuestMessage'\nimport '../style/App.css'\nimport axios from 'axios'\n\nconst Message = () => {\n  const location = useLocation()\n  let navigate = useNavigate()\n  const { msgId } = useParams()\n\n  const BASE_URL = 'http://localhost:3001/api'\n  let [allMessage, setAllMessage] = useState([])\n  let [postMessage, setPostMessage] = useState([])\n  let [message, setMessage] = useState('')\n  let [specificMessage, setSpecificMessage] = useState({})\n  let [messageUpdate, setMessageUpdate] = useEffect('')\n  let [messageDelete, setMessageDelete] = useState({})\n  // let [selected, setSelected] = useState(false)\n\n  let addNewMessage = () => {\n    const data = {\n      msg: ''\n    }\n\n    useEffect(() => {\n      if (message) {\n        let createMessage = async () => {\n          await axios\n            .post(`${BASE_URL}/message`, data)\n            .then(function (response) {\n              console.log(response, 'POST MESSAGE')\n              setMessage(response.data)\n            })\n            .catch(function (error) {\n              console.log(error)\n            })\n        }\n        createMessage()\n        navigate(location.pathname)\n        return () => {\n          message = [...allMessage, message]\n        }\n      }\n      if (allMessage) {\n        let getMessage = async () => {\n          let response = await axios.get(`${BASE_URL}/message`)\n          console.log(response, 'GET ALL MESSAGES')\n          setAllMessage(response.data)\n          navigate(location.pathname)\n        }\n        getMessage()\n        return () => {\n          allMessage = [...allMessage]\n        }\n      }\n      if (specificMessage) {\n        let getMessageById = async () => {\n          let response = await axios.get(`${BASE_URL}/message/${msgId}`)\n          console.log(response, 'GET SPECIFIC MESSAGES')\n          setSpecificMessage(response.data)\n          navigate(location.pathname)\n        }\n        getMessageById()\n        return () => {\n          getMessageById = [getMessageById]\n        }\n      }\n      if (messageUpdate) {\n        let updateMessage = async () => {\n          let response = await axios\n            .put(`${BASE_URL}/message/${msgId}`)\n            .then(function (response) {\n              console.log(response, 'UPDATE MESSAGE')\n              setMessage(response.data)\n            })\n            .catch(function (error) {\n              console.log(error)\n            })\n          setMessageUpdate(response.data)\n          navigate(location.pathname)\n        }\n        updateMessage()\n        return () => {\n          updateMessage = [...allMessage, updateMessage]\n        }\n      }\n      if (messageDelete) {\n        let deleteMessage = async () => {\n          let response = await axios\n            .delete(`${BASE_URL}/message/${msgId}`)\n            .then(function (response) {\n              console.log(response, 'DELETE MESSAGE')\n              setMessage(response.data)\n            })\n            .catch(function (error) {\n              console.log(error)\n            })\n          setMessageDelete(response.data)\n          navigate(location.pathname)\n        }\n        deleteMessage()\n        return () => {\n          deleteMessage = ['Message Deleted']\n        }\n      }\n    }, [])\n\n    const handleChange = (e) => {\n      e.preventDefault()\n      setMessage(e.target.value)\n    }\n\n    // const addMessage = () => {\n    //   let myMessage = [...postMessage, message]\n    //   setPostMessage(myMessage)\n    //   setMessage('')\n    // }\n\n    // const removeMessage = (message) => {\n    //   let addedMessage = [...postMessage]\n    //   addedMessage.splice(message, 1)\n    //   setPostMessage(addedMessage)\n    // }\n\n    // const displayMessage = () => {\n    //   const data = {\n    //     message: message\n    //   }\n    // }\n\n    return (\n      <div>\n        <h2>Leave a message for the couple!</h2>\n        <div>\n          <GuestMessage\n            handleChange={handleChange}\n            addNewMessage={addNewMessage}\n            allMessage={allMessage}\n            setAllMessage={setAllMessage}\n            message={message}\n            setMessage={setMessage}\n            specificMessage={specificMessage}\n            setSpecificMessage={setSpecificMessage}\n            messageupdate={messageUpdate}\n            setMessageUpdate={setMessageUpdate}\n            messageDelete={messageDelete}\n            setMessageDelete={setMessageDelete}\n          />\n          <PostMessage\n            postMessage={postMessage}\n            setPostMessage={setPostMessage}\n            messageDelete={messageDelete}\n            setMessageDelete={setMessageDelete}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}