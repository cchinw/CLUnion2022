{"ast":null,"code":"var _jsxFileName = \"/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/components/PostMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../style/App.css';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostMessage = _ref => {\n  _s();\n\n  let {\n    msg,\n    setAllMessage,\n    getMessage\n  } = _ref;\n  const BASE_URL = 'http://localhost:3001/api'; //display all messages ==> getMessage()\n  // const [allMessage, setAllMessage] = useState([])\n  //get message by Id ==> getMessageById\n\n  let [specificMessage, setSpecificMessage] = useState('');\n  const [imageLink, setImageLink] = useState({}); //update message ==> updateMessage()\n\n  const [messageUpdate, setMessageUpdate] = useState(''); //delete message ==> deletemessage\n\n  let [messageDelete, setMessageDelete] = useState({});\n\n  const deleteMessage = async msgId => {\n    const response = await axios.delete(`${BASE_URL}/message/${msgId}`).then(function (res) {\n      console.log(res, 'DELETE MESSAGE');\n      getMessage();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let updateMessage = async msgId => {\n    const data = {\n      image: imageLink,\n      msg: message\n    };\n    console.log(msgId, 'MSG ID');\n    await axios.put(`${BASE_URL}/message/${msgId}`, data).then(function (res) {\n      setMessageUpdate(res.data);\n      console.log(res, 'RESPONSE FOR UPDATE');\n      console.log(res.data, 'UPDATE MESSAGE');\n      getMessage();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const [message, setMessage] = useState('');\n\n  const handleChange = e => {\n    e.preventDefault();\n    setMessage(e.target.value);\n  };\n\n  const handleImageChange = e => {\n    const newImage = e.target.value;\n    setImageLink(newImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"msgImage\",\n      src: msg.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: msg.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateMsgContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateMsg\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"uploadImage\",\n          placeholder: \"Paste New Image Link\",\n          onChange: handleImageChange,\n          type: \"file\",\n          accept: \"image/jpeg, image/png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Edit your message here...\",\n          type: \"text\",\n          onChange: handleChange,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            updateMessage(msg._id);\n          },\n          children: \"Update Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            deleteMessage(msg._id);\n          },\n          children: \"Delete Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostMessage, \"80jlo4Iw/0Fscu2z+C78dZnCzxQ=\");\n\n_c = PostMessage;\nexport default PostMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostMessage\");","map":{"version":3,"sources":["/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/components/PostMessage.jsx"],"names":["React","axios","useState","useEffect","PostMessage","msg","setAllMessage","getMessage","BASE_URL","specificMessage","setSpecificMessage","imageLink","setImageLink","messageUpdate","setMessageUpdate","messageDelete","setMessageDelete","deleteMessage","msgId","response","delete","then","res","console","log","catch","error","updateMessage","data","image","message","put","setMessage","handleChange","e","preventDefault","target","value","handleImageChange","newImage","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAG,QAAsC;AAAA;;AAAA,MAArC;AAACC,IAAAA,GAAD;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,GAAqC;AAExD,QAAMC,QAAQ,GAAG,2BAAjB,CAFwD,CAGtD;AACA;AAEA;;AACA,MAAI,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CARsD,CAUtD;;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD,CAXsD,CAatD;;AACA,MAAI,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAhD;;AAGF,QAAMe,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAMC,QAAQ,GAAG,MAAMlB,KAAK,CACzBmB,MADoB,CACZ,GAAEZ,QAAS,YAAWU,KAAM,EADhB,EAEpBG,IAFoB,CAEf,UAAUC,GAAV,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,gBAAjB;AACAf,MAAAA,UAAU;AACX,KALoB,EAMpBkB,KANoB,CAMd,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KARoB,CAAvB;AASD,GAVD;;AAaA,MAAIC,aAAa,GAAG,MAAOT,KAAP,IAAiB;AACnC,UAAMU,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAElB,SADI;AAEXN,MAAAA,GAAG,EAAEyB;AAFM,KAAb;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmB,QAAnB;AACA,UAAMjB,KAAK,CACR8B,GADG,CACE,GAAEvB,QAAS,YAAWU,KAAM,EAD9B,EACiCU,IADjC,EAEHP,IAFG,CAEE,UAAUC,GAAV,EAAe;AACnBR,MAAAA,gBAAgB,CAACQ,GAAG,CAACM,IAAL,CAAhB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,qBAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACM,IAAhB,EAAsB,gBAAtB;AACArB,MAAAA,UAAU;AACX,KAPG,EAQHkB,KARG,CAQG,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVG,CAAN;AAWD,GAjBD;;AAkBA,QAAM,CAACI,OAAD,EAAUE,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM+B,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAIJ,CAAD,IAAO;AAC/B,UAAMK,QAAQ,GAAGL,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAzB,IAAAA,YAAY,CAAC2B,QAAD,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,4BACU;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAElC,GAAG,CAACwB;AAAnC;AAAA;AAAA;AAAA;AAAA,YADV,eAEU;AAAA,gBAAKxB,GAAG,CAACA;AAAT;AAAA;AAAA;AAAA;AAAA,YAFV,eAGU;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAEA;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,WAAW,EAAC,sBAA3C;AAAkE,UAAA,QAAQ,EAAEiC,iBAA5E;AAA+F,UAAA,IAAI,EAAE,MAArG;AAA4G,UAAA,MAAM,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAU,UAAA,WAAW,EAAC,2BAAtB;AAAkD,UAAA,IAAI,EAAC,MAAvD;AAA8D,UAAA,QAAQ,EAAEL,YAAxE;AAAsF,UAAA,KAAK,EAAEH;AAA7F;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AACA,UAAA,OAAO,EAAE,MAAM;AACbH,YAAAA,aAAa,CAACtB,GAAG,CAACmC,GAAL,CAAb;AACD,WAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AACF,UAAA,OAAO,EAAE,MAAM;AACbvB,YAAAA,aAAa,CAACZ,GAAG,CAACmC,GAAL,CAAb;AACD,WAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8Be,CA1FjB;;GAAMpC,W;;KAAAA,W;AA2FN,eAAeA,WAAf","sourcesContent":["import React from \"react\"\nimport '../style/App.css'\nimport axios from \"axios\"\nimport { useState, useEffect } from 'react'\n\nconst PostMessage = ({msg, setAllMessage, getMessage}) => {\n\n  const BASE_URL = 'http://localhost:3001/api'\n    //display all messages ==> getMessage()\n    // const [allMessage, setAllMessage] = useState([])\n\n    //get message by Id ==> getMessageById\n    let [specificMessage, setSpecificMessage] = useState('')\n    const [imageLink, setImageLink] = useState({})\n  \n    //update message ==> updateMessage()\n    const [messageUpdate, setMessageUpdate] = useState('')\n  \n    //delete message ==> deletemessage\n    let [messageDelete, setMessageDelete] = useState({})\n\n\n  const deleteMessage = async (msgId) => {\n    const response = await axios\n      .delete(`${BASE_URL}/message/${msgId}`)\n      .then(function (res) {\n        console.log(res, 'DELETE MESSAGE')\n        getMessage()\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  \n  let updateMessage = async (msgId) => {\n    const data = {\n      image: imageLink,\n      msg: message\n    }\n    console.log(msgId, 'MSG ID')\n    await axios\n      .put(`${BASE_URL}/message/${msgId}`, data)\n      .then(function (res) {\n        setMessageUpdate(res.data)\n        console.log(res, 'RESPONSE FOR UPDATE')\n        console.log(res.data, 'UPDATE MESSAGE')\n        getMessage()\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n  const [message, setMessage] = useState('')\n\n  const handleChange = (e) => {\n    e.preventDefault()\n    setMessage(e.target.value)\n  }\n\n  const handleImageChange = (e) => {\n    const newImage = e.target.value\n    setImageLink(newImage)\n  } \n\n  return (\n    <div>\n              <img className=\"msgImage\" src={msg.image} />\n              <h3>{msg.msg}</h3>\n              <div className=\"updateMsgContainer\">\n                <div className=\"updateMsg\">\n                {/* <input className='uploadImage' placeholder='Paste New Image Link' onChange={handleImageChange} value={imageLink} ></input> */}\n                <input className='uploadImage' placeholder='Paste New Image Link' onChange={handleImageChange} type= 'file' accept=\"image/jpeg, image/png\"></input>\n                <textarea placeholder=\"Edit your message here...\" type='text' onChange={handleChange} value={message}></textarea>\n                </div>\n                <div className=\"updateBtn\">\n                  <button\n                  onClick={() => {\n                    updateMessage(msg._id)\n                  }}\n                  >\n                    Update Message\n                  </button>\n                  <button\n                onClick={() => {\n                  deleteMessage(msg._id)\n                }}\n              >\n                Delete Message\n              </button>\n                </div>\n              </div>\n            </div>\n\n  )\n                }\nexport default PostMessage"]},"metadata":{},"sourceType":"module"}