{"ast":null,"code":"var _jsxFileName = \"/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, useParams, Link } from 'react-router-dom';\nimport PostMessage from '../components/PostMessage';\nimport GuestMessage from '../components/GuestMessage';\nimport '../style/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Message = () => {\n  _s();\n\n  const location = useLocation();\n  let navigate = useNavigate();\n  const {\n    msgId\n  } = useParams();\n  const BASE_URL = 'http://localhost:3001/api'; //display all messages ==> getMessage()\n\n  const [allMessage, setAllMessage] = useState([]); // let [postMessage, setPostMessage] = useState([])\n  //get message by Id ==> getMessageById\n\n  let [specificMessage, setSpecificMessage] = useState(''); //update message ==> updateMessage()\n\n  const [messageUpdate, setMessageUpdate] = useState(''); //delete message ==> deletemessage\n\n  let [messageDelete, setMessageDelete] = useState({});\n  let [selected, setSelected] = useState(false);\n  useEffect(() => {\n    let getMessage = async () => {\n      let response = await axios.get(`${BASE_URL}/message`);\n      setAllMessage(response.data.msg);\n    };\n\n    getMessage();\n  }, []); //   getMessageById()\n  // } else if (!selected && messageDelete) {\n  //   deleteMessage()\n  //   // } else {\n  //   //   return (selected = true)\n  //   }\n  // const handleChange = (e) => {\n  //   e.preventDefault()\n  //   setMessage(e.target.value)\n  // }\n  // const addMessage = () => {\n  //   let myMessage = [...allMessage, message]\n  //   setAllMessage(myMessage)\n  //   setMessage('')\n  // }\n  // const removeMessage = (msg) => {\n  //   let addedMessage = [...allMessage]\n  //   addedMessage.splice(message, 1)\n  //   setAllMessage(addedMessage)\n  // }\n  // const showAllMessages = () => {\n  //   let allMessages = [...allMessage]\n  //   return allMessages\n  // }\n  // const showOneMessage = () => {\n  //   return specificMessage\n  // }\n  // let getMessageById = async () => {\n  //   let response = await axios.get(`${BASE_URL}/message/${msgId}`)\n  //   console.log(response, 'GET SPECIFIC MESSAGES')\n  //   setSpecificMessage(response.data)\n  // }\n\n  const deleteMessage = async msgId => {\n    const response = await axios.delete(`${BASE_URL}/message/${msgId}`).then(function (res) {\n      console.log(res, 'DELETE MESSAGE');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let updateMessage = async msgId => {\n    let response = await axios.put(`${BASE_URL}/message/${msgId}`).then(function (res) {\n      setMessageUpdate(res.body);\n      console.log(res.body, 'UPDATE MESSAGE');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a message for the couple!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msgDisplay\",\n        children: [allMessage.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: msg.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteMessage(msg._id);\n            },\n            children: \"Delete Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateMessage(msg.id);\n            },\n            children: \"Update Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(GuestMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Message, \"TUpPhmGOusAyuvlgSx0jJXf5Wns=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/chinw/ga_seir/Unit2/projects/newCLU/CLUnion2022/client/clunion/src/pages/Message.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useParams","Link","PostMessage","GuestMessage","axios","Message","location","navigate","msgId","BASE_URL","allMessage","setAllMessage","specificMessage","setSpecificMessage","messageUpdate","setMessageUpdate","messageDelete","setMessageDelete","selected","setSelected","getMessage","response","get","data","msg","deleteMessage","delete","then","res","console","log","catch","error","updateMessage","put","body","map","image","_id","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useNavigate, useLocation, useParams, Link } from 'react-router-dom'\nimport PostMessage from '../components/PostMessage'\nimport GuestMessage from '../components/GuestMessage'\nimport '../style/App.css'\nimport axios from 'axios'\n\nconst Message = () => {\n  const location = useLocation()\n  let navigate = useNavigate()\n  const { msgId } = useParams()\n\n  const BASE_URL = 'http://localhost:3001/api'\n  //display all messages ==> getMessage()\n  const [allMessage, setAllMessage] = useState([])\n\n  // let [postMessage, setPostMessage] = useState([])\n\n  //get message by Id ==> getMessageById\n  let [specificMessage, setSpecificMessage] = useState('')\n  //update message ==> updateMessage()\n  const [messageUpdate, setMessageUpdate] = useState('')\n  //delete message ==> deletemessage\n  let [messageDelete, setMessageDelete] = useState({})\n  let [selected, setSelected] = useState(false)\n\n  useEffect(() => {\n    let getMessage = async () => {\n      let response = await axios.get(`${BASE_URL}/message`)\n      setAllMessage(response.data.msg)\n    }\n    getMessage()\n  }, [])\n\n  //   getMessageById()\n\n  // } else if (!selected && messageDelete) {\n\n  //   deleteMessage()\n  //   // } else {\n  //   //   return (selected = true)\n  //   }\n\n  // const handleChange = (e) => {\n  //   e.preventDefault()\n  //   setMessage(e.target.value)\n  // }\n\n  // const addMessage = () => {\n  //   let myMessage = [...allMessage, message]\n  //   setAllMessage(myMessage)\n  //   setMessage('')\n  // }\n\n  // const removeMessage = (msg) => {\n  //   let addedMessage = [...allMessage]\n  //   addedMessage.splice(message, 1)\n  //   setAllMessage(addedMessage)\n  // }\n\n  // const showAllMessages = () => {\n  //   let allMessages = [...allMessage]\n  //   return allMessages\n  // }\n\n  // const showOneMessage = () => {\n  //   return specificMessage\n  // }\n\n  // let getMessageById = async () => {\n  //   let response = await axios.get(`${BASE_URL}/message/${msgId}`)\n  //   console.log(response, 'GET SPECIFIC MESSAGES')\n  //   setSpecificMessage(response.data)\n  // }\n\n  const deleteMessage = async (msgId) => {\n    const response = await axios\n      .delete(`${BASE_URL}/message/${msgId}`)\n      .then(function (res) {\n        console.log(res, 'DELETE MESSAGE')\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  let updateMessage = async (msgId) => {\n    let response = await axios\n      .put(`${BASE_URL}/message/${msgId}`)\n      .then(function (res) {\n        setMessageUpdate(res.body)\n        console.log(res.body, 'UPDATE MESSAGE')\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Leave a message for the couple!</h2>\n      <div className=\"msgContainer\">\n        <div className=\"msgDisplay\">\n          {allMessage.map((msg) => (\n            <div>\n              <img src={msg.image} />\n              <h3>{msg.msg}</h3>\n              <button\n                onClick={() => {\n                  deleteMessage(msg._id)\n                }}\n              >\n                Delete Message\n              </button>\n              <button\n                onClick={() => {\n                  updateMessage(msg.id)\n                }}\n              >\n                Update Message\n              </button>\n            </div>\n          ))}\n          <GuestMessage />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}